# Acc\u00e8s aux fournisseurs de login social
# linkedin
spring.social.linkedin.consumerKey=78mc6swcn9cr46
spring.social.linkedin.consumerSecret=M6uZ3KA9XlsAYHOE
spring.social.linkedin.scope=r_basicprofile,r_emailaddress,w_member_social

# L'URL de la source de donn\u00e9es
spring.datasource.url=jdbc:h2:mem:testdb

# configuration de la source de donn\u00e9es
spring.datasource.username=app
spring.datasource.password=app

spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.open-in-view=true 
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

spring.datasource.sqlScriptEncoding=UTF-8

# Affichage par d\u00e9faut des erreurs du serveur
server.error.whitelabel.enabled=true
 
# La console H2 est activ\u00c3\u00a9e automatiquement si on utilise Spring Boot Dev Tools 
spring.h2.console.enabled=true
# L'URL par d\u00c3\u00a9faut de la console H2, customisable
spring.h2.console.path=/h2-console
#
# Configuration de la g\u00e9n\u00e9ration de JSON
spring.data.rest.defaultMediaType=application/json
# Pour g\u00e9n\u00e9rer du joli JSON
spring.jackson.serialization.indent-output=true
# L'API REST est expos\u00c3\u00a9e \u00c3\u00a0 l'url http://localhost:8080/api
spring.data.rest.base-path=api

# Configuration des logs
logging.level.web=DEBUG
# Montrer le d\u00e9tail des param\u00e9tres HTTP transmis dans les logs
spring.mvc.log-request-details=true

# cf. https://www.baeldung.com/sql-logging-spring-boot
# Configuration des logs SQL JPA
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%clr(%-5p)  %cyan(%logger{15}) - %msg %n